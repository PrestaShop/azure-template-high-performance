 {
  "$schema":"http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "adminUsername":{
      "type":"string",
      "metadata":{
        "description":"Username for the Ansible Control Virtual Machine and provisoning"
      }
    },
    "sshKeyData":{
      "type":"string",
      "metadata":{
        "description":"Public key for SSH authentication"
      }
    },
    "ubuntuOSVersion":{
      "type":"string",
      "metadata":{
        "description":"The Ubuntu version for the VM."
      }
    },

    "scVmSize":{
      "type":"string",
      "metadata":{
        "description":"Instance size for Web Front VMs"
      }
    },

    "scPublicIPAddressName":{
      "type":"string",
      "metadata":{
        "description":"frPublicIP"
      }
    },

    "scStorageAccountName":{
      "type":"string",
      "metadata":{
        "description":"Storage Account name"
      }
    },
    "scStorageAccountType":{
      "type":"string",
      "metadata":{
        "description":"Account type"
      }
    },
    "subnetCIDR":{
      "type":"string",
      "metadata":{
        "description":"Subnet Suffix"
      }
    },
    "scSubnetRoot":{
      "type":"string"
    },
    "scSubnetName":{
      "type":"string",
      "metadata":{
        "description":"Subnet Name"
      }
    },
    "scSubnetPrefix":{
      "type":"string",
      "metadata":{
        "description":"Subnet IP block"
      }
    },
    "vnetID":{
      "type":"string",
      "metadata":{
        "description":"vnet ID"
      }
    },
    "scVmName":{
      "type":"string",
      "metadata":{
        "description":"Basename of front VMs (max 9 characters)"
      }
    },

    "dnsNameForFrontPublicIP":{
      "type":"string",
      "metadata":{
        "description":"LB Name"
      }
    },

    "instanceCount":{
      "type":"int",
      "defaultValue":"2",
      "metadata":{
        "description":"Number of VM instances (100 or less)."
      },
      "maxValue":100
    }
  },
  "variables":{
    "location":"[resourceGroup().location]",
     
    
    "saCount":5,
    "newStorageAccountSuffix":"[concat(parameters('scVmName'), 'sa')]",
    "nicName":"[concat(parameters('scVmName'), 'nic')]",
    "ipConfigName":"[concat(parameters('scVmName'), 'ipconfig')]",

    "uniqueStringArray":[
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '0')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '1')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '2')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '3')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '4')))]"
    ],
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",

    "vhdContainerName":"[concat(parameters('scVmName'), 'vhd')]",
    "osDiskName":"[concat(parameters('scVmName'), 'osdisk')]",
  
    
    
    "osType":{
      "publisher":"Canonical",
      "offer":"UbuntuServer",
      "sku":"[parameters('ubuntuOSVersion')]",
      "version":"latest"
    },
    "imageReference":"[variables('osType')]",

    "frLBName":"[concat('lb', resourceGroup().name)]",
    "lbPublicIPAddressID":"[resourceId('Microsoft.Network/publicIPAddresses',parameters('scPublicIPAddressName'))]",
    "lbID":"[resourceId('Microsoft.Network/loadBalancers',variables('frLBName'))]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/LoadBalancerBackend')]",
    "frontEndIPConfigID":"[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontend')]",

    "scSubnetRef":"[concat(parameters('vnetID'),'/subnets/',parameters('scSubnetName'))]",

    "scPublicIPAddressType":"Dynamic",

    "apiVersion":{
      "resources":{
        "deployments":"2015-01-01"
      },
      "network":"2015-05-01-preview",
      "storage":"2015-05-01-preview",
      "compute":"2015-06-15"
    },

    "diagnosticsStorageAccountName":"[concat(variables('uniqueStringArray')[0], variables('newStorageAccountSuffix'))]",
    "diagnosticsStorageAccountResourceGroup": "[resourceGroup().name]",
    "accountid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',variables('diagnosticsStorageAccountResourceGroup'),'/providers/','Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
    "wadlogs": "<WadCfg><DiagnosticMonitorConfiguration>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\AvailableMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentAvailableMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. percent available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\UsedMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory used\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory percentage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedByCache\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. used by cache\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIdleTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU idle time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentUserTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentProcessorTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU percentage guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIOWaitTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU IO wait time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\BytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk total bytes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WriteBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\TransfersPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk transfers\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadsPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk reads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WritesPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk writes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageReadTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageWriteTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageTransferTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk transfer time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageDiskQueueLength\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Disk queue length\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'),variables('wadperfcounters1'),variables('wadperfcounters2'),'<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name ,'/providers/','Microsoft.Compute/virtualMachineScaleSets/',parameters('scVmName'))]",
    "wadcfgxend": "[concat('\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]"
  },
  "resources":[
    {
      "comments":"OK: Load Balancer Definition for Front ScaleSet VM",
      "apiVersion":"[variables('apiVersion').compute]",
      "name":"[variables('frLBName')]",
      "type":"Microsoft.Network/loadBalancers",
      "location":"[variables('location')]",
      "dependsOn":[
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('scPublicIPAddressName'))]"
      ],
      "properties":{
        "frontendIPConfigurations":[
          {
            "name":"LoadBalancerFrontend",
            "properties":{
              "publicIPAddress":{
                "id":"[variables('lbPublicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools":[
          {
            "name":"LoadBalancerBackend"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHttp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIP",
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          },
          {
            "name": "LBRuleHttps",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIP",
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "comments":"OK: Global Storage Account for the front scaleset VM",
      "type":"Microsoft.Storage/storageAccounts",
      "name":"[concat(variables('uniqueStringArray')[copyIndex()], toLower(parameters('scStorageAccountName'))   )]",
      "apiVersion":"[variables('apiVersion').storage]",
      "copy":{
        "name":"storageLoop",
        "count":"[variables('saCount')]"
      },
      "properties":{
        "accountType":"[parameters('scStorageAccountType')]"
      }
    },
    {
      "comments":"OK: Public IP for Front Load Balancer",
      "apiVersion":"[variables('apiVersion').network]",
      "type":"Microsoft.Network/publicIPAddresses",
      "name":"[parameters('scPublicIPAddressName')]",
      "location":"[variables('location')]",
      "properties":{
        "publicIPAllocationMethod":"[variables('scPublicIPAddressType')]",
        "dnsSettings":{
          "domainNameLabel":"[parameters('dnsNameForFrontPublicIP')]"
        }
      }
    },

  




    {
      "type":"Microsoft.Compute/virtualMachineScaleSets",
      "name":"[parameters('scVmName')]",
      "location":"[variables('location')]",
      "apiVersion":"[variables('apiVersion')]",
      "dependsOn":[
        "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray')[0], variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray')[1], variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray')[2], variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray')[3], variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray')[4], variables('newStorageAccountSuffix'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('frLBName'))]"
      ],
      "sku":{
        "name":"[parameters('scVmSize')]",
        "tier":"Standard",
        "capacity":"[parameters('instanceCount')]"
      },
      "properties":{
        "upgradePolicy":{
          "mode":"Manual"
        },
        "virtualMachineProfile":{
          "storageProfile":{
            "osDisk":{
              "vhdContainers":[
                "[concat('https://', variables('uniqueStringArray')[0], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[1], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[2], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[3], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[4], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]"
              ],
              "name":"[variables('osDiskName')]",
              "caching":"ReadOnly",
              "createOption":"FromImage"
            },
            "imageReference":"[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix":"[parameters('scVmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[variables('sshKeyPath')]",
                    "keyData": "[parameters('sshKeyData')]"
                  }
                ]
              }
            }
          },
          "networkProfile":{
            "networkInterfaceConfigurations":[
              {
                "name":"[variables('nicName')]",
                "properties":{
                  "primary":"true",
                  "ipConfigurations":[
                    {
                      "name":"[variables('ipConfigName')]",
                      "properties":{
                        "subnet":{
                          "id":"[variables('scSubnetRef')]"
                        },
                        "loadBalancerBackendAddressPools":[
                          {
                            "id":"[concat(variables('lbID'), '/backendAddressPools/LoadBalancerBackend')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name":"lapextension",
                "properties":{
                  "publisher":"Microsoft.OSTCExtensions",
                  "type":"CustomScriptForLinux",
                  "typeHandlerVersion":"1.3",
                  "autoUpgradeMinorVersion":true,
                  "settings":{
                    "fileUris":[
                      
                      
                      "https://raw.githubusercontent.com/herveleclerc/TechDaysCampDemo/master/ubuntu-vmss/deploy.sh",
                      "https://raw.githubusercontent.com/herveleclerc/TechDaysCampDemo/master/ubuntu-vmss/crate-setup.yml"



                    ],  
                    "commandToExecute": "[concat('bash deploy.sh ', 'unknown', ' ', parameters('instanceCount') )]"
                  }
                }
              },
              {
                "name": "LinuxDiagnostic",
                "properties": {
                  "publisher": "Microsoft.OSTCExtensions",
                  "type": "LinuxDiagnostic",
                  "typeHandlerVersion": "2.2",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "xmlCfg": "[base64(concat(variables('wadcfgxstart'),variables('wadmetricsresourceid'),variables('wadcfgxend')))]",
                    "storageAccount": "[variables('diagnosticsStorageAccountName')]"
                  },
                  "protectedSettings": {
                    "storageAccountName": "[variables('diagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listkeys(variables('accountid'), variables('apiVersion')).key1]",
                    "storageAccountEndPoint": "https://core.windows.net"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Insights/autoscaleSettings",
      "apiVersion":"2015-04-01",
      "name": "autoscalewah",
      "location":"[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('scVmName'))]"
      ],
      "properties": {
        "name": "autoscalewah",
        "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('scVmName'))]",
        "enabled": true,
        "profiles": [
          {
            "name": "Profile1",
            "capacity": {
              "minimum": "2",
              "maximum": "10",
              "default": "2"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "\\Processor\\PercentProcessorTime",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('scVmName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 80.0
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT1M"
                }
              },
              {
                "metricTrigger":{
                  "metricName":"\\Processor\\PercentProcessorTime",
                  "metricNamespace":"",
                  "metricResourceUri":"[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('scVmName'))]",
                  "timeGrain":"PT1M",
                  "statistic":"Average",
                  "timeWindow":"PT5M",
                  "timeAggregation":"Average",
                  "operator":"LessThan",
                  "threshold":40.0
                },
                "scaleAction":{
                  "direction":"Decrease",
                  "type":"ChangeCount",
                  "value":"1",
                  "cooldown":"PT1M"
                }
              }
            ]
          }
        ]
      }
    }
  ]
}
