 {
  "$schema":"http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "adminUsername":{
      "type":"string",
      "metadata":{
        "description":"Username for the Ansible Control Virtual Machine and provisoning"
      }
    },
    "sshKeyData":{
      "type":"string",
      "metadata":{
        "description":"Public key for SSH authentication"
      }
    },
    "ubuntuOSVersion":{
      "type":"string",
      "metadata":{
        "description":"The Ubuntu version for the VM."
      }
    },
    "scVmSize":{
      "type":"string",
      "metadata":{
        "description":"Instance size for Web Front VMs"
      }
    },
    "scPublicIPAddressName":{
      "type":"string",
      "metadata":{
        "description":"frPublicIP"
      }
    },
    "scStorageAccountName":{
      "type":"string",
      "metadata":{
        "description":"Storage Account name"
      }
    },
    "scStorageAccountType":{
      "type":"string",
      "metadata":{
        "description":"Account type"
      }
    },
    "scSubnetRoot":{
      "type":"string"
    },
    "scSubnetName":{
      "type":"string",
      "metadata":{
        "description":"Subnet Name"
      }
    },
    "scSubnetPrefix":{
      "type":"string",
      "metadata":{
        "description":"Subnet IP block"
      }
    },
    "virtualNetworkName":{
      "type":"string",
      "metadata":{
        "description":"Virtual Network Name"
      }
    },
    "scVmName":{
      "type":"string",
      "metadata":{
        "description":"Basename of front VMs (max 9 characters)"
      }
    },
    "dnsNameForFrontPublicIP":{
      "type":"string",
      "metadata":{
        "description":"LB Name"
      }
    },
    "prestashop_firstname":{
      "type":"string",
      "metadata":{
        "description":"Prestatshop Admin Firstname"
      }
    },
    "prestashop_lastname":{
      "type":"string",
      "metadata":{
        "description":"Prestatshop Admin Lastname"
      }
    },
    "prestashop_email":{
      "type":"string",
      "metadata":{
        "description":"Prestatshop Admin email"
      }
    },
    "prestashop_password":{
      "type":"securestring",
      "metadata":{
        "description":"Prestatshop Admin Password"
      }
    },
    "instanceCount":{
      "type":"int",
      "defaultValue":"2",
      "metadata":{
        "description":"Number of VM instances (100 or less)."
      },
      "maxValue":100
    },
    "frLBName":{
      "type":"string",
      "metadata":{
        "description":"Name of the LB"
      }
    },
    "hcSubnetRoot":{
      "type":"string",
      "metadata":{
        "description":"Jumpbox root network"
      }
    },
    "templatesBaseURL":{
      "type":"string",
      "metadata": {
        "description":"Base template URL",
        "artifactsBaseUrl": ""
      }
    },
    "keyStorageAccountName":{
      "type":"string",
      "metadata":{
        "description":"StorageAccount Name for secrets"
      }
    },
    "diagnosticsStorageAccountName":{
      "type":"string",
      "metadata":{
        "description":"Storage Account Name for diags"
      }      
    },
    "uniqScStorageAccountName":{
     "type":"string",
      "metadata":{
        "description":"Uniq Name Suffix for scaleset storage accounts"
      }
    }
  },
  "variables":{
    "numberOfFront":"100",
    "scriptsBaseUrl":"https://raw.githubusercontent.com/PrestaShop/azure-template-high-performance/master/scripts/",
    "location":"[resourceGroup().location]",
    "nicName":"[concat(parameters('scVmName'), 'nic')]",
    "ipConfigName":"[concat(parameters('scVmName'), 'ipconfig')]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "vhdContainerName":"[concat(parameters('scVmName'), 'vhd')]",
    "osDiskName":"[concat(parameters('scVmName'), 'osdisk')]",
    "storageAccountEndPoint":"https://core.windows.net",
    "osType":{
      "publisher":"Canonical",
      "offer":"UbuntuServer",
      "sku":"[parameters('ubuntuOSVersion')]",
      "version":"latest"
    },
    "imageReference":"[variables('osType')]",
    "vnetID":"[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "scSubnetRef":"[concat(variables('vnetID'),'/subnets/',parameters('scSubnetName'))]",
    "diagnosticsStorageAccountResourceGroup": "[resourceGroup().name]",
    "accountid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',variables('diagnosticsStorageAccountResourceGroup'),'/providers/','Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]",
    "wadlogs": "<WadCfg><DiagnosticMonitorConfiguration>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\AvailableMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentAvailableMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. percent available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\UsedMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory used\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory percentage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedByCache\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. used by cache\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIdleTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU idle time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentUserTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentProcessorTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU percentage guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIOWaitTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU IO wait time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\BytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk total bytes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WriteBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\TransfersPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk transfers\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadsPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk reads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WritesPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk writes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageReadTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageWriteTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageTransferTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk transfer time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageDiskQueueLength\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Disk queue length\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'),variables('wadperfcounters1'),variables('wadperfcounters2'),'<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name ,'/providers/','Microsoft.Compute/virtualMachineScaleSets/',parameters('scVmName'))]",
    "wadcfgxend": "[concat('\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]",
    "uniqueStringArray":[
      "[concat(parameters('uniqScStorageAccountName'), '0')]",
      "[concat(parameters('uniqScStorageAccountName'), '1')]",
      "[concat(parameters('uniqScStorageAccountName'), '2')]",
      "[concat(parameters('uniqScStorageAccountName'), '3')]",
      "[concat(parameters('uniqScStorageAccountName'), '4')]"
    ],
    "lbID":"[resourceId('Microsoft.Network/loadBalancers',parameters('frLBName'))]",
    "pythonAzureScriptUrl":"[concat(variables('scriptsBaseUrl'),'GetSSHFromPrivateStorage.py')]",
    "customScriptDeployFile":"deploy-scaleset.sh",
    "customScriptDeployUrl":"[concat(variables('scriptsBaseUrl'),variables('customScriptDeployFile'))]",
    "customScriptFrontCommand":"[concat('bash ',variables('customScriptDeployFile'))]",
    "ansiblePlaybookLocation":"deploy-scaleset.yml",
    "ansibleNFSPlaybookLocation":"deploy-scaleset-nfs.yml",
    "ansibleRolesReqLocation":"install_roles_scaleset.yml",
    "ansibleVarsLocation":"vars/scaleset/main.yml",
    "ansiblePlaybookUrl":"[concat(variables('scriptsBaseUrl'),variables('ansiblePlaybookLocation'))]",
    "ansibleNFSPlaybookUrl":"[concat(variables('scriptsBaseUrl'),variables('ansibleNFSPlaybookLocation'))]",
    "ansibleRolesReqUrl":"[concat(variables('scriptsBaseUrl'),variables('ansibleRolesReqLocation'))]",
    "ansibleVarsUrl":"[concat(variables('scriptsBaseUrl'),variables('ansibleVarsLocation'))]",
    "paramsExtra":"[concat(parameters('dnsNameForFrontPublicIP'),'.',resourceGroup().location)]",
    "paramsAdmin":"[concat(parameters('prestashop_password'),'\" \"',parameters('prestashop_firstname'),'\" \"',parameters('prestashop_lastname'),'\" \"',parameters('prestashop_email'))]",

    "apiVersion":{
      "resources":{
        "deployments":"2015-01-01"
      },
      "network":"2016-03-30",
      "storage":"2015-06-15",
      "compute":"2016-03-30",
      "diag":"2015-06-15",
      "scale":"2015-04-01"
    }
  },
  "resources":[
    
    { "comments":"OK: ScaleSet Definition",
      "type":"Microsoft.Compute/virtualMachineScaleSets",
      "name":"[parameters('scVmName')]",
      "location":"[variables('location')]",
      "apiVersion":"[variables('apiVersion').compute]",
      "dependsOn":[ ],
      "sku":{
        "name":"[parameters('scVmSize')]",
        "tier":"Standard",
        "capacity":"[parameters('instanceCount')]"
      },
      "properties":{
        "overprovision": "false",
        "upgradePolicy":{
          "mode":"Manual"
        },
        "virtualMachineProfile":{
          "storageProfile":{
            "osDisk":{
              "vhdContainers":[
                "[concat('https://', variables('uniqueStringArray')[0], toLower(parameters('scStorageAccountName')), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[1], toLower(parameters('scStorageAccountName')), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[2], toLower(parameters('scStorageAccountName')), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[3], toLower(parameters('scStorageAccountName')), '.blob.core.windows.net/', variables('vhdContainerName'))]",
                "[concat('https://', variables('uniqueStringArray')[4], toLower(parameters('scStorageAccountName')), '.blob.core.windows.net/', variables('vhdContainerName'))]"
              ],
              "name":"[variables('osDiskName')]",
              "caching":"ReadOnly",
              "createOption":"FromImage"
            },
            "imageReference":"[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix":"[parameters('scVmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword":"=debug0001=",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "false",
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[variables('sshKeyPath')]",
                    "keyData": "[parameters('sshKeyData')]"
                  }
                ]
              }
            }
          },
          "networkProfile":{
            "networkInterfaceConfigurations":[
              {
                "name":"[variables('nicName')]",
                "properties":{
                  "primary":"true",
                  "ipConfigurations":[
                    {
                      "name":"[variables('ipConfigName')]",
                      "properties":{
                        "subnet":{
                          "id":"[variables('scSubnetRef')]"
                        },
                        "loadBalancerBackendAddressPools":[
                          {
                            "id":"[concat(variables('lbID'), '/backendAddressPools/LoadBalancerBackend')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name":"lapextension",
                "properties":{
                  "publisher":"Microsoft.OSTCExtensions",
                  "type":"CustomScriptForLinux",
                  "typeHandlerVersion":"1.5",
                  "autoUpgradeMinorVersion":true,
                  "settings":{
                    "fileUris":[
                      "[concat(variables('scriptsBaseUrl'),'/deploy-scaleset.sh')]",
                      "[variables('pythonAzureScriptUrl')]",
                      "[variables('ansiblePlaybookUrl')]",
                      "[variables('ansibleNFSPlaybookUrl')]",
                      "[variables('ansibleRolesReqUrl')]",
                      "[variables('ansibleVarsUrl')]"
                    ]
                  },
                  "protectedSettings":{
                     "commandToExecute":"[concat(variables('customScriptFrontCommand'),' \"', parameters('keyStorageAccountName'),'\" \"',listKeys(concat('Microsoft.Storage/storageAccounts/', parameters('keyStorageAccountName')), '2015-05-01-preview').key1,'\" \"',parameters('adminUsername'),'\" \"',variables('numberOfFront'),'\" \"',parameters('scSubnetRoot'),'\" \"',parameters('scVmName'),'\" \"',variables('paramsExtra'),'\" \"',variables('paramsAdmin'),'\" \"',parameters('hcSubnetRoot'),'\"')]"
                  }
                }
              },
              {
                "name": "LinuxDiagnostic",
                "properties": {
                  "publisher": "Microsoft.OSTCExtensions",
                  "type": "LinuxDiagnostic",
                  "typeHandlerVersion": "2.3",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "xmlCfg": "[base64(concat(variables('wadcfgxstart'),variables('wadmetricsresourceid'),variables('wadcfgxend')))]",
                    "storageAccount": "[parameters('diagnosticsStorageAccountName')]"
                  },
                  "protectedSettings": {
                    "storageAccountName": "[parameters('diagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listkeys(variables('accountid'), variables('apiVersion').diag).key1]",
                    "storageAccountEndPoint": "[variables('storageAccountEndPoint')]"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "comments":"OK: Autoscaling Definition",
      "type": "Microsoft.Insights/autoscaleSettings",
      "apiVersion":"[variables('apiVersion').scale]",
      "name": "autoscaleps",
      "location":"[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('scVmName'))]"
      ],
      "properties": {
        "name": "autoscaleps",
        "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('scVmName'))]",
        "enabled": true,
        "profiles": [
          {
            "name": "Profile1",
            "capacity": {
              "minimum": "2",
              "maximum": "10",
              "default": "2"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName":"\\Processor\\PercentProcessorTime",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('scVmName'))]",
                  "timeGrain":"PT1M",
                  "statistic":"Average",
                  "timeWindow":"PT5M",
                  "timeAggregation":"Average",
                  "operator":"GreaterThan",
                  "threshold":80.0
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT1M"
                }
              },
              {
                "metricTrigger":{
                  "metricName":"\\Processor\\PercentProcessorTime",
                  "metricNamespace":"",
                  "metricResourceUri":"[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', parameters('scVmName'))]",
                  "timeGrain":"PT1M",
                  "statistic":"Average",
                  "timeWindow":"PT5M",
                  "timeAggregation":"Average",
                  "operator":"LessThan",
                  "threshold":40.0
                },
                "scaleAction":{
                  "direction":"Decrease",
                  "type":"ChangeCount",
                  "value":"1",
                  "cooldown":"PT1M"
                }
              }
            ]
          }
        ]
      }
    }
  ]
}
