{
  "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "adminUsername":{
      "type":"string",
      "metadata":{
        "description":"Admin Username for the Vms"
      },
      "defaultValue":"pr35745h0p"
    },
    "adminPassword":{
      "type":"string",
      "metadata":{
        "description":"Admin Password for the Vms"
      },
      "defaultValue":"pr35745h0p"
    },
    "sshKeyData":{
      "type":"string",
      "metadata":{
        "description":"SSH RSA public key file as a string. Not used if authenticationType of password."
      }
    },
    "authenticationType":{
      "type":"string",
      "allowedValues":[
        "password",
        "sshPublicKey"
      ]
    },
    "hcStorageAccountName":{
      "type":"string",
      "metadata":{
        "description":"Storage Account Name for JumpBox"
      }
    },
    "dnsNameForAnsiblePublicIP":{
      "type":"string",
      "metadata":{
        "description":"DNS Name address for Jumpbox VM"
      }
    },
    "hcPublicIPAddressName":{
      "type":"string",
      "defaultValue":"hcPublicIP",
      "metadata":{
        "description":"Public IP address Name for Jumpbox VM"
      }
    },
    "virtualNetworkName":{
      "type":"string",
      "metadata":{
        "description":"Virtual Network Name"
      }
    },
    "hcSubnetName":{
      "type":"string",
      "metadata":{
        "description":"Name of Jumpbox subnet"
      }
    },
    "hcSubnetPrefix":{
      "type":"string",
      "metadata":{
        "description":"Control VM Subnet Prefix"
      }
    },
    "scSubnetName":{
      "type":"string",
      "metadata":{
        "description":"Name of web-front scaleset subnet"
      }
    },
    "scSubnetPrefix":{
      "type":"string",
      "metadata":{
        "description":"web-front scaleset Subnet Prefix"
      }
    },
    "bkSubnetName":{
      "type":"string",
      "metadata":{
        "description":"Name of back subnet"
      }
    },
    "bkSubnetPrefix":{
      "type":"string",
      "metadata":{
        "description":"back Subnet Prefix"
      }
    },
    "numberOfBack":{
      "type":"int",
      "defaultValue":2,
      "metadata":{
        "description":"Number of Back nodes to create >=2"
      }
    },
    "prestashop_firstname":{
      "type":"string",
      "metadata":{
        "description":"Prestatshop Admin Firstname"
      }
    },
    "prestashop_lastname":{
      "type":"string",
      "metadata":{
        "description":"Prestatshop Admin Lastname"
      }
    },
    "prestashop_email":{
      "type":"string",
      "metadata":{
        "description":"Prestatshop Admin email"
      }
    },
    "prestashop_password":{
      "type":"securestring",
      "metadata":{
        "description":"Prestatshop Admin Password"
      }
    },
    "dnsNameForFrontPublicIP":{
      "type":"string",
      "metadata":{
        "description":"Public IP address for web-front LB "
      }
    },
    "bkVmSize":{
      "type":"string",
      "defaultValue":"Standard_DS1",
      "metadata":{
        "description":"Instance size for Web Front VMs Minimum Standard_A2"
      }
    },
    "hcVmSize":{
      "type":"string",
      "defaultValue":"Standard_DS1",
      "metadata":{
        "description":"Instance size for Ansible VM Control"
      }
    },
    "keyStorageAccountName":{
      "type":"string",
      "metadata":{
        "description":"StorageAccount Name for secrets"
      }
    },
    "hcVmName":{
      "type":"string",
      "metadata":{
        "description":"JumpBox VM Name"
      }
    },
    "scVmName":{
      "type":"string",
      "metadata":{
        "description":"web-front ScaleSet vm suffix"
      }
    },
    "bkVmName":{
      "type":"string",
      "metadata":{
        "description":"Back VM name suffix"
      }
    },
    "diagnosticsStorageAccountName":{
      "type":"string",
      "metadata":{
        "description":"Storage Account Name for diags"
      }      
    }
  },
  "variables":{
    "location":"[resourceGroup().location]",
   
    "hcNicName":"hcVnic",
    "vnetID":"[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "hcSubnetRef":"[concat(variables('vnetID'),'/subnets/',parameters('hcSubnetName'))]",
    "sshKeyPath":"[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "imagePublisher":"Canonical",
    "imageOffer":"UbuntuServer",
    "ubuntuOSVersion":"16.04.0-LTS",
    "hcOSDiskName":"hcosdisk",
    "scriptsBaseUrl":"https://raw.githubusercontent.com/PrestaShop/azure-template-high-performance/master/scripts/",
    
    "numberOfFront":"100",
    "ansiblePlaybookLocation":"deploy-prestashop.yml",
    "ansibleRolesReqLocation":"install_roles.yml",
    "ansibleVarsLocation":"vars/main.yml",
    "ansibleVarsMasterLocation":"vars/master.yml",
    "ansibleVarsSlaveLocation":"vars/slave.yml",
    "ansibleVarsDefaultLocation":"vars/mysql_default.yml",
    "customScriptDeployFile":"deploy.sh",
    "customScriptDeployUrl":"[concat(variables('scriptsBaseUrl'),variables('customScriptDeployFile'))]",
    "customScriptAnsibleCommand":"[concat('bash ',variables('customScriptDeployFile'))]",
    "ansiblePlaybookUrl":"[concat(variables('scriptsBaseUrl'),variables('ansiblePlaybookLocation'))]",
    "ansibleRolesReqUrl":"[concat(variables('scriptsBaseUrl'),variables('ansibleRolesReqLocation'))]",
    "ansibleVarsUrl":"[concat(variables('scriptsBaseUrl'),variables('ansibleVarsLocation'))]",
    "ansibleVarsMastersUrl":"[concat(variables('scriptsBaseUrl'),variables('ansibleVarsMasterLocation'))]",
    "ansibleVarsSlavesUrl":"[concat(variables('scriptsBaseUrl'),variables('ansibleVarsSlaveLocation'))]",
    "ansibleVarsDefaultsUrl":"[concat(variables('scriptsBaseUrl'),variables('ansibleVarsDefaultLocation'))]",
    "pythonAzureScriptUrl":"[concat(variables('scriptsBaseUrl'),'WriteSSHToPrivateStorage.py')]",
    "hcVmStorageAccountContainerName":"vhds",
    "hcSubnetRoot":"[concat( split(parameters('hcSubnetPrefix'), '.')[0], '.', split(parameters('hcSubnetPrefix'), '.')[1], '.', split(parameters('hcSubnetPrefix'), '.')[2])]",
    "frSubnetRoot":"[concat( split(parameters('scSubnetPrefix'), '.')[0], '.', split(parameters('scSubnetPrefix'), '.')[1], '.', split(parameters('scSubnetPrefix'), '.')[2])]",
    "bkSubnetRoot":"[concat( split(parameters('bkSubnetPrefix'), '.')[0], '.', split(parameters('bkSubnetPrefix'), '.')[1], '.', split(parameters('bkSubnetPrefix'), '.')[2])]",
    "paramsSubnets":"[concat(variables('hcSubnetRoot'),'\" \"',variables('frSubnetRoot'),'\" \"',variables('bkSubnetRoot'))]",
    "paramsNbHosts":"[concat(variables('numberOfFront'),'\" \"',parameters('numberOfBack'))]",
    "paramsNames":"[concat(parameters('hcVmName'),'\" \"',parameters('scVmName'),'\" \"',parameters('bkVmName'))]",
    "paramsExtra":"[concat(parameters('prestashop_password'),'\" \"',parameters('dnsNameForFrontPublicIP'),'.',variables('location'))]",
    "paramsAdmin":"[concat(parameters('prestashop_firstname'),'\" \"',parameters('prestashop_lastname'),'\" \"',parameters('prestashop_email'),'\" \"',toLower(parameters('bkVmSize')))]",
    "paramsDeploy":"[concat(parameters('adminUsername'),'\" \"',variables('paramsSubnets'),'\" \"',variables('paramsNbHosts'),'\" \"',variables('paramsNames'),'\" \"',variables('paramsExtra'),'\" \"',variables('paramsAdmin'))]",
    "osProfile_hc_password":{
      "computerName":"[parameters('hcVmName')]",
      "adminUsername":"[parameters('adminUsername')]",
      "adminPassword":"[parameters('adminPassword')]"
    },
    "osProfile_hc_sshPublicKey":{
      "computerName":"[parameters('hcVmName')]",
      "adminUsername":"[parameters('adminUsername')]",
      "linuxConfiguration":{
        "disablePasswordAuthentication":"true",
        "ssh":{
          "publicKeys":[
            {
              "path":"[variables('sshKeyPath')]",
              "keyData":"[parameters('sshKeyData')]"
            }
          ]
        }
      }
    },
    "apiVersion":{
      "resources":{
        "deployments":"2015-01-01"
      },
      "network":"2015-05-01-preview",
      "storage":"2015-05-01-preview",
      "compute":"2015-06-15",
      "deployment":"2016-02-01"
    }
  },
  "resources":[
    {
      "comments":"OK: Interface for Ansible Control VM with a public IP attached",
      "apiVersion":"[variables('apiVersion').network]",
      "type":"Microsoft.Network/networkInterfaces",
      "name":"[variables('hcNicName')]",
      "location":"[variables('location')]",
      "dependsOn":[
      ],
      "properties":{
        "dnsSettings":{
          "dnsServers":[
          ]
        },
        "ipConfigurations":[
          {
            "name":"ipconfig1",
            "properties":{
              "privateIPAllocationMethod":"Dynamic",
              "publicIPAddress":{
                "id":"[resourceId('Microsoft.Network/publicIPAddresses',parameters('hcPublicIPAddressName'))]"
              },
              "subnet":{
                "id":"[variables('hcSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "comments":"OK: Custom script extension for the Ansible Control VM",
      "type":"Microsoft.Compute/virtualMachines/extensions",
      "name":"[concat(parameters('hcVmName'),'/installAnsible')]",
      "apiVersion":"[variables('apiVersion').compute]",
      "location":"[resourceGroup().location]",
      "dependsOn":[
        "[concat('Microsoft.Compute/virtualMachines/', parameters('hcVmName'))]"
      ],
      "properties":{
        "publisher":"Microsoft.OSTCExtensions",
        "type":"CustomScriptForLinux",
        "typeHandlerVersion":"1.5",
        "autoUpgradeMinorVersion":true,
        "settings":{
          "fileUris":[
            "[variables('customScriptDeployUrl')]",
            "[variables('ansiblePlaybookUrl')]",
            "[variables('ansibleRolesReqUrl')]",
            "[variables('ansibleVarsUrl')]",
            "[variables('pythonAzureScriptUrl')]",
            "[variables('ansibleVarsMastersUrl')]",
            "[variables('ansibleVarsSlavesUrl')]",
            "[variables('ansibleVarsDefaultsUrl')]"
          ]
        },
        "protectedSettings":{
          "commandToExecute":"[concat(variables('customScriptAnsibleCommand'),' \"',parameters('keyStorageAccountName'),'\" \"',listKeys(concat('Microsoft.Storage/storageAccounts/', parameters('keyStorageAccountName')), '2015-05-01-preview').key1,'\" \"',variables('paramsDeploy'),'\"')]"
        }
      }
    },
    {
      "comments":"Ansible Contol VM plays the playbook to provision the LAMP cluster",
      "apiVersion":"[variables('apiVersion').compute]",
      "type":"Microsoft.Compute/virtualMachines",
      "name":"[parameters('hcVmName')]",
      "location":"[variables('location')]",
      "dependsOn":[
        "[concat('Microsoft.Network/networkInterfaces/', variables('hcNicName'))]"
      ],
      "properties":{
        "hardwareProfile":{
          "vmSize":"[parameters('hcVmSize')]"
        },
        "osProfile":"[variables(concat('osProfile_hc_', parameters('authenticationType')))]",
        "storageProfile":{
          "imageReference":{
            "publisher":"[variables('imagePublisher')]",
            "offer":"[variables('imageOffer')]",
            "sku":"[variables('ubuntuOSVersion')]",
            "version":"latest"
          },
          "osDisk":{
            "name":"osdisk",
            "vhd":{
              "uri":"[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('hcStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('hcVmStorageAccountContainerName'),'/', variables('hcOSDiskName'), '.vhd')]"
            },
            "caching":"ReadWrite",
            "createOption":"FromImage"
          }
        },
        "networkProfile":{
          "networkInterfaces":[
            {
              "id":"[resourceId('Microsoft.Network/networkInterfaces',variables('hcNicName'))]"
            }
          ]
        },
        "diagnosticsProfile":{
          "bootDiagnostics":{
            "enabled":"true",
            "storageUri":"[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob)]"
          }
        }
      }
    }
  ],
  "outputs":{
    "Ansible FQDN":{
      "value":"[concat(parameters('dnsNameForAnsiblePublicIP'),'.',variables('location'),'.cloudapp.azure.com')]",
      "type":"string"
    }
  }
}